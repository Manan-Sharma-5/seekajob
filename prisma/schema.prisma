// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Recruiter {
  id        String   @id @default(cuid()) @map("_id")
  name      String
  email     String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobs      Job[]
}

model Candidate {
  id           String         @id @default(cuid()) @map("_id")
  name         String
  email        String
  password     String
  appliedJobs  String[]       @default([])
  resume       String
  Job          Job[]          @relation(fields: [appliedJobs], references: [id])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  JobApplicant JobApplicant[]
}

model Job {
  id                  String         @id @default(cuid()) @map("_id")
  title               String
  description         String
  detailedDescription String
  companyID           String
  Company             Company        @relation(fields: [companyID], references: [id])
  experience          String
  location            String
  salary              Float
  recruiter           Recruiter      @relation(fields: [recruiterId], references: [id])
  recruiterId         String
  category            String
  candidates          String[]       @default([])
  candidatesApplied   Candidate[]    @relation(fields: [candidates], references: [id])
  tags                String[]
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  JobApplicant        JobApplicant[]
}

model Company {
  id        String   @id @default(cuid()) @map("_id")
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Company   Job[]
}

model JobApplicant {
  id        String    @id @default(cuid()) @map("_id")
  jobID     String
  userID    String
  Job       Job       @relation(fields: [jobID], references: [id])
  User      Candidate @relation(fields: [userID], references: [id])
  name      String
  email     String
  resume    String
  status    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([jobID, userID])
}
